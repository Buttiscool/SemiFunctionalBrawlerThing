<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Global Tracking of HP, RAGE, and whatever else
//
//

//Player 1 - set these when the game starts.
global.Player1_XP = 0;  //Player expereince points 
global.Player1_HP = 100;   //HP in % 
global.Player1_RAGE = 0;    //Rage in %
global.Player1_STM = 100; //Stamina in %

//

//Testing 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Drawing shit bars for HUD
//Player 1 will always be drawn... 
//Every other extra player will have to be checked for by some variable.



//Colours (cc = custom colour)
cc_babyfoodgreen = make_colour_rgb(166, 207, 77);
cc_teal = make_colour_rgb(65, 190, 174);
cc_purple = make_colour_rgb(157, 127, 185);
cc_orange = make_colour_rgb(255, 127, 1);
cc_lightorange = make_colour_rgb(236, 215, 194);

//Player 1
//HP BAR
draw_healthbar(view_xview+120, view_yview+10, view_xview + 260, view_yview + 28, global.Player1_HP, c_dkgray, c_red, cc_babyfoodgreen, 0, true, true);

//STM BAR
draw_healthbar(view_xview+120, view_yview+30, view_xview + 260, view_yview + 48, global.Player1_STM, c_dkgray, c_red, cc_teal, 0, true, true);

//RAGE BAR
draw_healthbar(view_xview+20, view_yview+10, view_xview+38, view_yview+100, global.Player1_RAGE, cc_lightorange, cc_orange, cc_orange, 3, true, true )


//DRAW PLAYER PORTRAIT
draw_rectangle_colour(view_xview+40, view_yview+10,view_xview+118, view_yview+100, cc_purple, cc_purple, cc_purple, cc_purple, false);
draw_rectangle_colour(view_xview+40, view_yview+10,view_xview+118, view_yview+100, c_black, c_black, c_black, c_black, true);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
