<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!mouse_check_button_pressed(mb_left)) exit;

x = view_xview + xstart;
y = view_yview + ystart;
var xx = x,
    yy = y;
    
with(obj_Player)
{
    var chest = tmc_inv_get_chest(m_Inventory,"BACKPACK");
    var ITEMUID = -1;
    //draw_text(xx,yy,string(chest));
    if(!is_undefined( chest))
    {
        var content = tmc_inv_chest_content_get(chest);
        var iend = content[CONTENT.COUNT];
        for(var i = 1; i&lt;=iend; i++)
        {
            var item = content[i];
            var item_name = item[ITEM.NAME];
            var item_UID = item[ITEM.UID];
            var item_chest_name = item[ITEM.CHESTNAME];
            var item_data = item[ITEM.DATA];
            draw_sprite(item_data[0],0,xx,yy);
            if(point_distance(xx,yy,mouse_x,mouse_y) &lt;20)
            {
                //show the item
                show_message("Item clicked" + string(item));
                //show your user apointed data
                show_message("Item clicked Your Data (sprite_index,other stuf,,,,) " + string(item_data));
                //show your item id
                show_message("Item clicked UID is: " + string(item_UID));
                
                //check the other calls
                //check find api
                show_message("find_item_in_chest (May not be the one you clicked) returns:" + string(tmc_inv_find_item_in_chest(m_Inventory,"BACKPACK",item_name)));
                //check global find api
                show_message("find_item (May not be the one you clicked) returns:" + string(tmc_inv_find_item(m_Inventory,item_name)));
                //check return array of all items  matching name in one chest
                show_message("find_all_items_in_chest (count,UID1,UID2,...)  returns:" + string(tmc_inv_find_all_items_in_chest(m_Inventory,"BACKPACK",item_name)));
                //check return array of all items matching name
                show_message("find_all_items (count,UID1,UID2,...)  returns:" + string(tmc_inv_find_all_items(m_Inventory,item_name)));
                ITEMUID = item_UID;
                break;
            }
            xx+=40;
            //Find item name and execute script
        }
        if(ITEMUID !=-1)
        {
            show_message("Deleting and using item with UID: " + string(ITEMUID))
            tmc_inv_del_item(m_Inventory,ITEMUID)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview + xstart;
y = view_yview + ystart;
var xx = x,
    yy = y;
    
with(obj_Player)
{
    var chest = tmc_inv_get_chest(m_Inventory,"BACKPACK");
    //draw_text(xx,yy,string(chest));
    if(!is_undefined( chest))
    {
        var content = tmc_inv_chest_content_get(chest);
        var iend = content[CONTENT.COUNT];
        for(var i = 1; i&lt;=iend; i++)
        {
            var item = content[i];
            var item_name = item[ITEM.NAME];
            var item_UID = item[ITEM.UID];
            var item_chest_name = item[ITEM.CHESTNAME];
            var item_data = item[ITEM.DATA];
            draw_sprite(item_data[0],0,xx,yy);
            xx+=40;
            //do something with item
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
